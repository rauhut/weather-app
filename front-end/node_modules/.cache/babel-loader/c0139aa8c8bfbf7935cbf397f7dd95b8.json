{"ast":null,"code":"var _jsxFileName = \"/Users/jackierauhut/Documents/Web dev stuff/weather-app/src/components/CurrentWeather/CurrentWeather.js\";\nimport React from \"react\";\nimport tempConverter from \"../../util\";\nimport \"./CurrentWeather.css\";\n\nconst CurrentWeather = ({\n  weatherData,\n  isCelsius\n}) => {\n  const weatherType = weatherData.weather[0].main; // const atmospherer = [\"Mist\", \"Smoke\", \"Haze\", \"Dust\", \"Fog\", \"Sand\", \"Ash\", \"Squall\", \"Tornado\"]\n  // if(weatherType ===)\n\n  let icon = \"\";\n\n  try {\n    icon = require(`../../weather-icons/${weatherType}.svg`);\n  } catch (err) {\n    console.log(\"tries Catch\");\n    icon = require(`../../weather-icons/Atmosphere.svg`);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Weather for \", weatherData.name, \", \", weatherData.sys.country), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, weatherType), /*#__PURE__*/React.createElement(\"img\", {\n    src: require(`../../weather-icons/${icon}.svg`),\n    alt: `Image for ${weatherType}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, weatherData.weather[0].description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"current-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, tempConverter(isCelsius, weatherData.main.temp), \"\\xB0\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Humidity: \", weatherData.main.humidity, \"%\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Feels Like:\", \" \", tempConverter(isCelsius, weatherData.main.feels_like), \"\\xB0\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Pressure: \", weatherData.main.pressure, \"hPa\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Max: \", tempConverter(isCelsius, weatherData.main.temp_max), \"\\xB0\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Min: \", tempConverter(isCelsius, weatherData.main.temp_min), \"\\xB0\")))));\n};\n\nexport default CurrentWeather;","map":{"version":3,"sources":["/Users/jackierauhut/Documents/Web dev stuff/weather-app/src/components/CurrentWeather/CurrentWeather.js"],"names":["React","tempConverter","CurrentWeather","weatherData","isCelsius","weatherType","weather","main","icon","require","err","console","log","name","sys","country","description","temp","humidity","feels_like","pressure","temp_max","temp_min"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,YAA1B;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAgC;AACrD,QAAMC,WAAW,GAAGF,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuBC,IAA3C,CADqD,CAErD;AACA;;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,MAAI;AACFA,IAAAA,IAAI,GAAGC,OAAO,CAAE,uBAAsBJ,WAAY,MAApC,CAAd;AACD,GAFD,CAEE,OAAOK,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAJ,IAAAA,IAAI,GAAGC,OAAO,CAAE,oCAAF,CAAd;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeN,WAAW,CAACU,IAD3B,QACmCV,WAAW,CAACW,GAAZ,CAAgBC,OADnD,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,WAAL,CADF,eAEE;AACE,IAAA,GAAG,EAAEI,OAAO,CAAE,uBAAsBD,IAAK,MAA7B,CADd;AAEE,IAAA,GAAG,EAAG,aAAYH,WAAY,EAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuBU,WAA5B,CANF,CADF,eASE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,aAAa,CAACG,SAAD,EAAYD,WAAW,CAACI,IAAZ,CAAiBU,IAA7B,CAAlB,SADF,CATF,CADF,eAcE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAed,WAAW,CAACI,IAAZ,CAAiBW,QAAhC,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACc,GADd,EAEGjB,aAAa,CAACG,SAAD,EAAYD,WAAW,CAACI,IAAZ,CAAiBY,UAA7B,CAFhB,SAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAehB,WAAW,CAACI,IAAZ,CAAiBa,QAAhC,QANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUnB,aAAa,CAACG,SAAD,EAAYD,WAAW,CAACI,IAAZ,CAAiBc,QAA7B,CAAvB,SAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUpB,aAAa,CAACG,SAAD,EAAYD,WAAW,CAACI,IAAZ,CAAiBe,QAA7B,CAAvB,SARF,CAdF,CAJF,CADF,CADF;AAkCD,CA7CD;;AA+CA,eAAepB,cAAf","sourcesContent":["import React from \"react\";\nimport tempConverter from \"../../util\";\nimport \"./CurrentWeather.css\";\n\nconst CurrentWeather = ({ weatherData, isCelsius }) => {\n  const weatherType = weatherData.weather[0].main;\n  // const atmospherer = [\"Mist\", \"Smoke\", \"Haze\", \"Dust\", \"Fog\", \"Sand\", \"Ash\", \"Squall\", \"Tornado\"]\n  // if(weatherType ===)\n  let icon = \"\";\n  try {\n    icon = require(`../../weather-icons/${weatherType}.svg`);\n  } catch (err) {\n    console.log(\"tries Catch\");\n    icon = require(`../../weather-icons/Atmosphere.svg`);\n  }\n  return (\n    <div>\n      <center>\n        <h1>\n          Weather for {weatherData.name}, {weatherData.sys.country}\n        </h1>\n        <div className=\"card\">\n          <div className=\"weather-main\">\n            <div className=\"weather-type\">\n              <h3>{weatherType}</h3>\n              <img\n                src={require(`../../weather-icons/${icon}.svg`)}\n                alt={`Image for ${weatherType}`}\n              ></img>\n              <h4>{weatherData.weather[0].description}</h4>\n            </div>\n            <div className=\"current-temp\">\n              <h2>{tempConverter(isCelsius, weatherData.main.temp)}째</h2>\n            </div>\n          </div>\n          <div className=\"weather-details\">\n            <h6>Humidity: {weatherData.main.humidity}%</h6>\n            <h6>\n              Feels Like:{\" \"}\n              {tempConverter(isCelsius, weatherData.main.feels_like)}째\n            </h6>\n            <h6>Pressure: {weatherData.main.pressure}hPa</h6>\n            <h6>Max: {tempConverter(isCelsius, weatherData.main.temp_max)}째</h6>\n            <h6>Min: {tempConverter(isCelsius, weatherData.main.temp_min)}째</h6>\n          </div>\n        </div>\n      </center>\n    </div>\n  );\n};\n\nexport default CurrentWeather;\n"]},"metadata":{},"sourceType":"module"}