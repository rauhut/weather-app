{"ast":null,"code":"var _jsxFileName = \"/Users/jackierauhut/Documents/Web dev stuff/weather-app/front-end/src/components/CurrentWeather/CurrentWeather.js\";\nimport React from \"react\";\nimport { tempConverter, weatherIcon } from \"../../util\";\nimport \"./CurrentWeather.css\";\n\nconst CurrentWeather = ({\n  weatherData,\n  isCelsius\n}) => {\n  const data = weatherData.data;\n  const weatherType = data.weather[0].main;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"Weather for \", data.name, \", \", data.sys.country), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }\n  }, weatherType), /*#__PURE__*/React.createElement(\"img\", {\n    src: require(`../../weather-icons/${weatherIcon(weatherType)}.svg`),\n    alt: `Image for ${weatherType}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, data.weather[0].description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"current-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, tempConverter(isCelsius, data.main.temp), \"\\xB0\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Humidity: \", data.main.humidity, \"%\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Feels Like: \", tempConverter(isCelsius, data.main.feels_like), \"\\xB0\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Pressure: \", data.main.pressure, \"hPa\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Max: \", tempConverter(isCelsius, data.main.temp_max), \"\\xB0\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Min: \", tempConverter(isCelsius, data.main.temp_min), \"\\xB0\")))));\n};\n\nexport default CurrentWeather;","map":{"version":3,"sources":["/Users/jackierauhut/Documents/Web dev stuff/weather-app/front-end/src/components/CurrentWeather/CurrentWeather.js"],"names":["React","tempConverter","weatherIcon","CurrentWeather","weatherData","isCelsius","data","weatherType","weather","main","name","sys","country","require","description","temp","humidity","feels_like","pressure","temp_max","temp_min"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,YAA3C;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAgC;AACrD,QAAMC,IAAI,GAAGF,WAAW,CAACE,IAAzB;AACA,QAAMC,WAAW,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBC,IAApC;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeH,IAAI,CAACI,IADpB,QAC4BJ,IAAI,CAACK,GAAL,CAASC,OADrC,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,WAAL,CADF,eAEE;AACE,IAAA,GAAG,EAAEM,OAAO,CAAE,uBAAsBX,WAAW,CAC7CK,WAD6C,CAE7C,MAFU,CADd;AAIE,IAAA,GAAG,EAAG,aAAYA,WAAY,EAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBM,WAArB,CARF,CADF,eAWE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,aAAa,CAACI,SAAD,EAAYC,IAAI,CAACG,IAAL,CAAUM,IAAtB,CAAlB,SADF,CAXF,CADF,eAgBE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeT,IAAI,CAACG,IAAL,CAAUO,QAAzB,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACef,aAAa,CAACI,SAAD,EAAYC,IAAI,CAACG,IAAL,CAAUQ,UAAtB,CAD5B,SAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeX,IAAI,CAACG,IAAL,CAAUS,QAAzB,QALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUjB,aAAa,CAACI,SAAD,EAAYC,IAAI,CAACG,IAAL,CAAUU,QAAtB,CAAvB,SANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUlB,aAAa,CAACI,SAAD,EAAYC,IAAI,CAACG,IAAL,CAAUW,QAAtB,CAAvB,SAPF,CAhBF,CAJF,CADF,CADF;AAmCD,CAtCD;;AAwCA,eAAejB,cAAf","sourcesContent":["import React from \"react\";\nimport { tempConverter, weatherIcon } from \"../../util\";\nimport \"./CurrentWeather.css\";\n\nconst CurrentWeather = ({ weatherData, isCelsius }) => {\n  const data = weatherData.data;\n  const weatherType = data.weather[0].main;\n  return (\n    <div>\n      <center>\n        <h1>\n          Weather for {data.name}, {data.sys.country}\n        </h1>\n        <div className=\"card\">\n          <div className=\"weather-main\">\n            <div className=\"weather-type\">\n              <h3>{weatherType}</h3>\n              <img\n                src={require(`../../weather-icons/${weatherIcon(\n                  weatherType\n                )}.svg`)}\n                alt={`Image for ${weatherType}`}\n              ></img>\n              <h4>{data.weather[0].description}</h4>\n            </div>\n            <div className=\"current-temp\">\n              <h2>{tempConverter(isCelsius, data.main.temp)}째</h2>\n            </div>\n          </div>\n          <div className=\"weather-details\">\n            <h6>Humidity: {data.main.humidity}%</h6>\n            <h6>\n              Feels Like: {tempConverter(isCelsius, data.main.feels_like)}째\n            </h6>\n            <h6>Pressure: {data.main.pressure}hPa</h6>\n            <h6>Max: {tempConverter(isCelsius, data.main.temp_max)}째</h6>\n            <h6>Min: {tempConverter(isCelsius, data.main.temp_min)}째</h6>\n          </div>\n        </div>\n      </center>\n    </div>\n  );\n};\n\nexport default CurrentWeather;\n"]},"metadata":{},"sourceType":"module"}