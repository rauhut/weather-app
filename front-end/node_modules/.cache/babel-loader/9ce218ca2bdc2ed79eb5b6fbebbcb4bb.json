{"ast":null,"code":"var _jsxFileName = \"/Users/jackierauhut/Documents/Web dev stuff/weather-app/front-end/src/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport CurrentWeather from \"./components/CurrentWeather/CurrentWeather\";\nimport SearchField from \"./components/SearchField/SearchField\";\nimport UnitToggle from \"./components/UnitToggle/UnitToggle\";\nimport Forcast from \"./components/Forcast/Forcast\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onToggleClick = () => {\n      this.setState(currentState => ({\n        isCelsius: !currentState.isCelsius\n      }));\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        locationEntry: event.target.value\n      });\n    };\n\n    this.onEnter = e => {\n      if (e.which === 13) {\n        this.onLocationSubmit();\n      }\n    };\n\n    this.onLocationSubmit = () => {\n      fetch(`http://localhost:3000/weather?locationEntry=${this.state.locationEntry}`, {\n        method: \"get\",\n        header: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        console.log(res);\n\n        if (res.ok) {\n          this.setState({\n            isValidlocation: true\n          });\n          return res.json().then(data => {\n            if (data.cod === \"404\") {\n              this.setState({\n                isValidlocation: false\n              });\n            } else {\n              this.setState({\n                weatherData: data\n              });\n              return fetch(`http://localhost:3000/forcast?lat=${data.coord.lat}&lon=${data.coord.lon}`, {\n                method: \"get\",\n                header: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n            }\n          }).then(res => res.json()).then(data => {\n            this.setState({\n              forcast: data.daily\n            });\n          });\n        } else {\n          this.setState({\n            isValidlocation: false\n          });\n        }\n      });\n    };\n\n    this.state = {\n      locationEntry: \"\",\n      weatherData: {},\n      forcast: [],\n      isCelsius: true,\n      isValidlocation: true\n    };\n  }\n\n  render() {\n    const {\n      locationEntry,\n      weatherData,\n      isCelsius,\n      forcast,\n      isValidlocation\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, Object.keys(this.state.weatherData).length === 0 && this.state.isValidlocation ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"empty-state\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"Enter a location to see the weather forcast\"), /*#__PURE__*/React.createElement(SearchField, {\n      onInputChange: this.onInputChange,\n      onLocationSubmit: this.onLocationSubmit,\n      onEnter: this.onEnter,\n      locationEntry: locationEntry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SearchField, {\n      onInputChange: this.onInputChange,\n      onLocationSubmit: this.onLocationSubmit,\n      onEnter: this.onEnter,\n      locationEntry: locationEntry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(UnitToggle, {\n      onToggleClick: this.onToggleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    })), isValidlocation ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CurrentWeather, {\n      weatherData: weatherData,\n      isCelsius: isCelsius,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Forcast, {\n      forcastData: forcast,\n      isCelsius: isCelsius,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"empty-state\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Unable to find that location\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jackierauhut/Documents/Web dev stuff/weather-app/front-end/src/App.js"],"names":["React","Component","Fragment","CurrentWeather","SearchField","UnitToggle","Forcast","App","constructor","onToggleClick","setState","currentState","isCelsius","onInputChange","event","locationEntry","target","value","onEnter","e","which","onLocationSubmit","fetch","state","method","header","then","res","console","log","ok","isValidlocation","json","data","cod","weatherData","coord","lat","lon","forcast","daily","render","Object","keys","length"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport CurrentWeather from \"./components/CurrentWeather/CurrentWeather\";\nimport SearchField from \"./components/SearchField/SearchField\";\nimport UnitToggle from \"./components/UnitToggle/UnitToggle\";\nimport Forcast from \"./components/Forcast/Forcast\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      locationEntry: \"\",\n      weatherData: {},\n      forcast: [],\n      isCelsius: true,\n      isValidlocation: true,\n    };\n  }\n\n  onToggleClick = () => {\n    this.setState((currentState) => ({\n      isCelsius: !currentState.isCelsius,\n    }));\n  };\n\n  onInputChange = (event) => {\n    this.setState({ locationEntry: event.target.value });\n  };\n\n  onEnter = (e) => {\n    if (e.which === 13) {\n      this.onLocationSubmit();\n    }\n  };\n\n  onLocationSubmit = () => {\n    fetch(\n      `http://localhost:3000/weather?locationEntry=${this.state.locationEntry}`,\n      {\n        method: \"get\",\n        header: { \"Content-Type\": \"application/json\" },\n      }\n    ).then((res) => {\n      console.log(res);\n      if (res.ok) {\n        this.setState({ isValidlocation: true });\n        return res\n          .json()\n          .then((data) => {\n            if (data.cod === \"404\") {\n              this.setState({ isValidlocation: false });\n            } else {\n              this.setState({ weatherData: data });\n              return fetch(\n                `http://localhost:3000/forcast?lat=${data.coord.lat}&lon=${data.coord.lon}`,\n                {\n                  method: \"get\",\n                  header: { \"Content-Type\": \"application/json\" },\n                }\n              );\n            }\n          })\n          .then((res) => res.json())\n          .then((data) => {\n            this.setState({ forcast: data.daily });\n          });\n      } else {\n        this.setState({ isValidlocation: false });\n      }\n    });\n  };\n\n  render() {\n    const {\n      locationEntry,\n      weatherData,\n      isCelsius,\n      forcast,\n      isValidlocation,\n    } = this.state;\n    return (\n      <div className=\"background\">\n        {Object.keys(this.state.weatherData).length === 0 &&\n        this.state.isValidlocation ? (\n          <div className=\"empty-state\">\n            <h1>Enter a location to see the weather forcast</h1>\n            <SearchField\n              onInputChange={this.onInputChange}\n              onLocationSubmit={this.onLocationSubmit}\n              onEnter={this.onEnter}\n              locationEntry={locationEntry}\n            />\n          </div>\n        ) : (\n          <Fragment>\n            <div className=\"nav-bar\">\n              <div className=\"search-bar\">\n                <SearchField\n                  onInputChange={this.onInputChange}\n                  onLocationSubmit={this.onLocationSubmit}\n                  onEnter={this.onEnter}\n                  locationEntry={locationEntry}\n                />\n              </div>\n              <UnitToggle onToggleClick={this.onToggleClick} />\n            </div>\n            {isValidlocation ? (\n              <div className=\"weather-container\">\n                <CurrentWeather\n                  weatherData={weatherData}\n                  isCelsius={isCelsius}\n                />\n                <Forcast forcastData={forcast} isCelsius={isCelsius} />\n              </div>\n            ) : (\n              <div className=\"empty-state\">\n                <h1>Unable to find that location</h1>\n              </div>\n            )}\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}