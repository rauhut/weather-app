{"ast":null,"code":"var _jsxFileName = \"/Users/jackierauhut/Documents/Web dev stuff/weather-app/src/components/CurrentWeather/CurrentWeather.js\";\nimport React from \"react\";\nimport { tempConverter, weatherIcon } from \"../../util\";\nimport \"./CurrentWeather.css\";\n\nconst CurrentWeather = ({\n  weatherData,\n  isCelsius\n}) => {\n  const weatherType = weatherData.weather[0].main;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"Weather for \", weatherData.name, \", \", weatherData.sys.country), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 15\n    }\n  }, weatherType), /*#__PURE__*/React.createElement(\"img\", {\n    src: require(`../../weather-icons/${weatherIcon(weatherType)}.svg`),\n    alt: `Image for ${weatherType}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, weatherData.weather[0].description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"current-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, tempConverter(isCelsius, weatherData.main.temp), \"\\xB0\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Humidity: \", weatherData.main.humidity, \"%\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Feels Like:\", \" \", tempConverter(isCelsius, weatherData.main.feels_like), \"\\xB0\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Pressure: \", weatherData.main.pressure, \"hPa\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Max: \", tempConverter(isCelsius, weatherData.main.temp_max), \"\\xB0\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Min: \", tempConverter(isCelsius, weatherData.main.temp_min), \"\\xB0\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Sunrise: \", weatherData.sys.sunrise), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default CurrentWeather;","map":{"version":3,"sources":["/Users/jackierauhut/Documents/Web dev stuff/weather-app/src/components/CurrentWeather/CurrentWeather.js"],"names":["React","tempConverter","weatherIcon","CurrentWeather","weatherData","isCelsius","weatherType","weather","main","name","sys","country","require","description","temp","humidity","feels_like","pressure","temp_max","temp_min","sunrise"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,YAA3C;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAgC;AACrD,QAAMC,WAAW,GAAGF,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuBC,IAA3C;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeJ,WAAW,CAACK,IAD3B,QACmCL,WAAW,CAACM,GAAZ,CAAgBC,OADnD,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,WAAL,CADF,eAEE;AACE,IAAA,GAAG,EAAEM,OAAO,CAAE,uBAAsBV,WAAW,CAC7CI,WAD6C,CAE7C,MAFU,CADd;AAIE,IAAA,GAAG,EAAG,aAAYA,WAAY,EAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuBM,WAA5B,CARF,CADF,eAWE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,aAAa,CAACI,SAAD,EAAYD,WAAW,CAACI,IAAZ,CAAiBM,IAA7B,CAAlB,SADF,CAXF,CADF,eAgBE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeV,WAAW,CAACI,IAAZ,CAAiBO,QAAhC,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACc,GADd,EAEGd,aAAa,CAACI,SAAD,EAAYD,WAAW,CAACI,IAAZ,CAAiBQ,UAA7B,CAFhB,SAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeZ,WAAW,CAACI,IAAZ,CAAiBS,QAAhC,QANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUhB,aAAa,CAACI,SAAD,EAAYD,WAAW,CAACI,IAAZ,CAAiBU,QAA7B,CAAvB,SAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUjB,aAAa,CAACI,SAAD,EAAYD,WAAW,CAACI,IAAZ,CAAiBW,QAA7B,CAAvB,SARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcf,WAAW,CAACM,GAAZ,CAAgBU,OAA9B,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAhBF,CAJF,CADF,CADF;AAsCD,CAxCD;;AA0CA,eAAejB,cAAf","sourcesContent":["import React from \"react\";\nimport { tempConverter, weatherIcon } from \"../../util\";\nimport \"./CurrentWeather.css\";\n\nconst CurrentWeather = ({ weatherData, isCelsius }) => {\n  const weatherType = weatherData.weather[0].main;\n  return (\n    <div>\n      <center>\n        <h1>\n          Weather for {weatherData.name}, {weatherData.sys.country}\n        </h1>\n        <div className=\"card\">\n          <div className=\"weather-main\">\n            <div className=\"weather-type\">\n              <h3>{weatherType}</h3>\n              <img\n                src={require(`../../weather-icons/${weatherIcon(\n                  weatherType\n                )}.svg`)}\n                alt={`Image for ${weatherType}`}\n              ></img>\n              <h4>{weatherData.weather[0].description}</h4>\n            </div>\n            <div className=\"current-temp\">\n              <h2>{tempConverter(isCelsius, weatherData.main.temp)}째</h2>\n            </div>\n          </div>\n          <div className=\"weather-details\">\n            <h6>Humidity: {weatherData.main.humidity}%</h6>\n            <h6>\n              Feels Like:{\" \"}\n              {tempConverter(isCelsius, weatherData.main.feels_like)}째\n            </h6>\n            <h6>Pressure: {weatherData.main.pressure}hPa</h6>\n            <h6>Max: {tempConverter(isCelsius, weatherData.main.temp_max)}째</h6>\n            <h6>Min: {tempConverter(isCelsius, weatherData.main.temp_min)}째</h6>\n            <h6>Sunrise: {weatherData.sys.sunrise}</h6>\n            <h6></h6>\n          </div>\n        </div>\n      </center>\n    </div>\n  );\n};\n\nexport default CurrentWeather;\n"]},"metadata":{},"sourceType":"module"}